// Copyright 2023 Virgil authors. All rights reserved.
// See LICENSE for details of Apache 2.0 license.

class V3Box_TypeCon extends TypeCon {
	new(name: string) super(name, V3Kind.BOX, 0, TypeUtil.globalCache) {
		singleton = BoxType.new(uid, this, null);
	}

	def renderType(buf: StringBuilder, list: List<Type>) -> StringBuilder {
		return buf.put1("Box[%s]", name);
	}
}

// Utility methods for dealing with synthetic box types in Virgil
component V3Box {
	def newType(name: string, oldType: ClassType) -> BoxType {
		var boxType = BoxType.!(V3Box_TypeCon.new(name).create(null));
		boxType.oldType = oldType;
		return boxType;
	}
}
// The representation of a box type
class BoxType extends Type {
	var superType: BoxType;
	var oldType: ClassType;
	var tag: int;

	new(hash: int, typeCon: TypeCon, nested: List<Type>) super(hash, typeCon, nested) { }
}
