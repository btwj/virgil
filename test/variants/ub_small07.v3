//@execute =0
type Either<T, U> #unboxed {
	case Left(val: T);
	case Right(val: U);
}

def f<T, U>(a: Either<T, U>) -> int {
	match (a) {
		Left(val) => return 1;
		Right(val) => return 2;
	}
}

def main() -> int {
	var a = Either<int, bool>.Left(12);
	var b = Either<int, bool>.Right(false);

	var c = Either<u64, i32>.Left(123ul);
	var d = Either<u64, i32>.Right(123);

	if (f(a) != 1) return -1;
	if (f(b) != 2) return -2;
	if (f(c) != 1) return -3;
	if (f(d) != 2) return -4;

	return 0;
}